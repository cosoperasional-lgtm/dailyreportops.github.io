<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Laporan Harian</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <script src="https://cdn.jsdelivr.net/npm/xlsx@0.18.5/dist/xlsx.full.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .dashboard-header {
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
            border-radius: 0 0 15px 15px;
        }
        .company-logo {
            height: 50px;
            margin-right: 15px;
        }
        .nav-tabs .nav-link {
            color: #6c757d;
            border: none;
            border-radius: 8px 8px 0 0;
            margin-right: 5px;
        }
        .nav-tabs .nav-link.active {
            background-color: #fff;
            color: #6a11cb;
            font-weight: 600;
            box-shadow: 0 -3px 10px rgba(0,0,0,0.05);
        }
        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            margin-bottom: 1.5rem;
            transition: transform 0.3s ease;
        }
        .card:hover {
            transform: translateY(-5px);
        }
        .card-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
            font-weight: 600;
            padding: 1rem 1.5rem;
        }
        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .stat-card.blue {
            background: linear-gradient(135deg, #2196F3 0%, #21CBF3 100%);
        }
        .stat-card.green {
            background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
        }
        .stat-card.orange {
            background: linear-gradient(135deg, #f46b45 0%, #eea849 100%);
        }
        .stat-card.red {
            background: linear-gradient(135deg, #eb3349 0%, #f45c43 100%);
        }
        .stat-icon {
            font-size: 2.5rem;
            opacity: 0.8;
        }
        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            margin: 0.5rem 0;
        }
        .btn-primary {
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            border: none;
            border-radius: 8px;
            padding: 0.5rem 1.5rem;
        }
        .btn-success {
            background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
            border: none;
            border-radius: 8px;
            padding: 0.5rem 1.5rem;
        }
        .btn-warning {
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            border: none;
            border-radius: 8px;
            padding: 0.5rem 1.5rem;
        }
        .table th {
            background-color: #f8f9fa;
            border-top: none;
            font-weight: 600;
        }
        .form-control, .form-select {
            border-radius: 8px;
            border: 1px solid #ced4da;
        }
        .form-control:focus, .form-select:focus {
            border-color: #6a11cb;
            box-shadow: 0 0 0 0.25rem rgba(106, 17, 203, 0.25);
        }
        .action-buttons .btn {
            margin-right: 5px;
        }
        .empty-state {
            text-align: center;
            padding: 3rem;
            color: #6c757d;
        }
        .empty-state i {
            font-size: 4rem;
            margin-bottom: 1rem;
            color: #dee2e6;
        }
        .chart-container {
            position: relative;
            height: 300px;
            margin: 1rem 0;
        }
        .tab-content {
            padding: 2rem 0;
        }
        .modal-header {
            background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
            color: white;
        }
        .modal-header .btn-close {
            filter: brightness(0) invert(1);
        }
    </style>
</head>
<body>
    <div class="dashboard-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-6 d-flex align-items-center">
                    
                    <div>
                        <h1 class="mb-0"><i class="bi bi-speedometer2 me-2"></i>Sistem Laporan Harian</h1>
                        <p class="mb-0">Dashboard Monitoring Kejadian Menonjol & Tindak Lanjut</p>
                    </div>
                </div>
                <div class="col-md-6 text-md-end">
                    <span class="badge bg-light text-dark fs-6 me-2">
                        <i class="bi bi-calendar3 me-1"></i> <span id="currentDate"></span>
                    </span>
                    <button class="btn btn-light" id="exportBtn">
                        <i class="bi bi-file-earmark-excel me-1"></i> Export ke Excel
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Navigasi Tab -->
        <ul class="nav nav-tabs mb-4" id="mainTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="dashboard-tab" data-bs-toggle="tab" data-bs-target="#dashboard" type="button" role="tab">
                    <i class="bi bi-graph-up me-2"></i>Dashboard
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="input-tab" data-bs-toggle="tab" data-bs-target="#input" type="button" role="tab">
                    <i class="bi bi-plus-circle me-2"></i>Input Laporan
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="data-tab" data-bs-toggle="tab" data-bs-target="#data" type="button" role="tab">
                    <i class="bi bi-table me-2"></i>Data Laporan
                </button>
            </li>
        </ul>

        <!-- Tab Content -->
        <div class="tab-content" id="mainTabsContent">
            <!-- Dashboard Tab -->
            <div class="tab-pane fade show active" id="dashboard" role="tabpanel">
                <!-- Filter Tanggal -->
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="row align-items-end">
                            <div class="col-md-3">
                                <label for="filterStartDate" class="form-label">Dari Tanggal</label>
                                <input type="date" class="form-control" id="filterStartDate">
                            </div>
                            <div class="col-md-3">
                                <label for="filterEndDate" class="form-label">Sampai Tanggal</label>
                                <input type="date" class="form-control" id="filterEndDate">
                            </div>
                            <div class="col-md-3">
                                <label for="filterProyek" class="form-label">Filter Proyek</label>
                                <select class="form-select" id="filterProyek">
                                    <option value="">Semua Proyek</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <button class="btn btn-primary w-100" onclick="applyFilters()">
                                    <i class="bi bi-funnel me-1"></i> Terapkan Filter
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Statistik Cards -->
                <div class="row mb-4">
                    <div class="col-md-3">
                        <div class="stat-card">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <div class="stat-label">Total Laporan</div>
                                    <div class="stat-number" id="totalLaporan">0</div>
                                    <small>Semua Waktu</small>
                                </div>
                                <i class="bi bi-file-earmark-text stat-icon"></i>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-card blue">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <div class="stat-label">Laporan Hari Ini</div>
                                    <div class="stat-number" id="laporanHariIni">0</div>
                                    <small><span id="todayDate"></span></small>
                                </div>
                                <i class="bi bi-calendar-day stat-icon"></i>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-card green">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <div class="stat-label">Total Proyek</div>
                                    <div class="stat-number" id="totalProyek">0</div>
                                    <small>Aktif</small>
                                </div>
                                <i class="bi bi-building stat-icon"></i>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stat-card orange">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <div class="stat-label">Total Pelanggaran</div>
                                    <div class="stat-number" id="totalPelanggaran">0</div>
                                    <small>Personil</small>
                                </div>
                                <i class="bi bi-exclamation-triangle stat-icon"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Charts Row -->
                <div class="row mb-4">
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0"><i class="bi bi-bar-chart me-2"></i>Laporan per Proyek</h5>
                            </div>
                            <div class="card-body">
                                <div class="chart-container">
                                    <canvas id="proyekChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0"><i class="bi bi-pie-chart me-2"></i>Distribusi Punishment</h5>
                            </div>
                            <div class="card-body">
                                <div class="chart-container">
                                    <canvas id="punishmentChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Recent Reports Table -->
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0"><i class="bi bi-clock-history me-2"></i>Laporan Terbaru</h5>
                        <button class="btn btn-sm btn-outline-primary" onclick="showAllReports()">
                            Lihat Semua <i class="bi bi-arrow-right"></i>
                        </button>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover" id="recentTable">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Tanggal</th>
                                        <th>Proyek</th>
                                        <th>SU</th>
                                        <th>Kejadian Menonjol</th>
                                        <th>Punishment</th>
                                    </tr>
                                </thead>
                                <tbody id="recentTableBody">
                                    <!-- Data akan dimasukkan di sini -->
                                </tbody>
                            </table>
                            <div id="recentEmptyState" class="empty-state d-none">
                                <i class="bi bi-inbox"></i>
                                <h5>Belum Ada Data Laporan</h5>
                                <p>Silakan tambahkan laporan baru di menu Input Laporan</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Input Laporan Tab -->
            <div class="tab-pane fade" id="input" role="tabpanel">
                <div class="row">
                    <div class="col-lg-8 mx-auto">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0" id="formTitle"><i class="bi bi-plus-circle me-2"></i>Tambah Laporan Baru</h5>
                            </div>
                            <div class="card-body">
                                <form id="laporanForm">
                                    <input type="hidden" id="editId" value="">
                                    <div class="mb-3">
                                        <label for="tanggal" class="form-label">Hari/Tanggal</label>
                                        <input type="date" class="form-control" id="tanggal" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="proyek" class="form-label">Nama Proyek</label>
                                        <input type="text" class="form-control" id="proyek" placeholder="Masukkan nama proyek" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="su" class="form-label">Nama SU</label>
                                        <input type="text" class="form-control" id="su" placeholder="Masukkan nama SU" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="kejadian" class="form-label">Kejadian Menonjol (PI)</label>
                                        <textarea class="form-control" id="kejadian" rows="3" placeholder="Deskripsikan kejadian menonjol" required></textarea>
                                    </div>
                                    <div class="mb-3">
                                        <label for="tindakLanjut" class="form-label">Tindak Lanjut (CA)</label>
                                        <textarea class="form-control" id="tindakLanjut" rows="3" placeholder="Deskripsikan tindak lanjut" required></textarea>
                                    </div>
                                    <div class="mb-3">
                                        <label for="personil" class="form-label">Personil Yang Melanggar</label>
                                        <input type="text" class="form-control" id="personil" placeholder="Masukkan nama personil">
                                    </div>
                                    <div class="mb-3">
                                        <label for="punishment" class="form-label">Punishment (SP)</label>
                                        <select class="form-select" id="punishment">
                                            <option value="">Pilih jenis punishment</option>
                                            <option value="SP 1">SP 1</option>
                                            <option value="SP 2">SP 2</option>
                                            <option value="SP 3">SP 3</option>
                                            <option value="Terminated">Terminated</option>
                                            <option value="Teguran Lisan">Teguran Lisan</option>
                                            <option value="Pelatihan Ulang">Pelatihan Ulang</option>
                                            <option value="Lain-lain">Lain-lain</option>
                                        </select>
                                    </div>
                                    <div class="d-grid gap-2">
                                        <button type="submit" class="btn btn-primary" id="submitBtn">
                                            <i class="bi bi-save me-1"></i> Simpan Laporan
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary" onclick="cancelEdit()" id="cancelBtn" style="display: none;">
                                            <i class="bi bi-x-circle me-1"></i> Batal Edit
                                        </button>
                                        <button type="reset" class="btn btn-outline-secondary" id="resetBtn">
                                            <i class="bi bi-arrow-clockwise me-1"></i> Reset Form
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Data Laporan Tab -->
            <div class="tab-pane fade" id="data" role="tabpanel">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0"><i class="bi bi-table me-2"></i>Data Laporan Harian</h5>
                        <div class="input-group" style="width: 250px;">
                            <input type="text" class="form-control" id="searchInput" placeholder="Cari laporan...">
                            <button class="btn btn-outline-secondary" type="button">
                                <i class="bi bi-search"></i>
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover" id="laporanTable">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Tanggal</th>
                                        <th>Proyek</th>
                                        <th>SU</th>
                                        <th>Kejadian Menonjol</th>
                                        <th>Tindak Lanjut</th>
                                        <th>Personil</th>
                                        <th>Punishment</th>
                                        <th>Aksi</th>
                                    </tr>
                                </thead>
                                <tbody id="laporanTableBody">
                                    <!-- Data akan dimasukkan di sini -->
                                </tbody>
                            </table>
                            <div id="emptyState" class="empty-state d-none">
                                <i class="bi bi-inbox"></i>
                                <h5>Belum Ada Data Laporan</h5>
                                <p>Silakan tambahkan laporan baru menggunakan formulir di menu Input Laporan</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Konfirmasi Hapus -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Konfirmasi Hapus</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Apakah Anda yakin ingin menghapus laporan ini?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Hapus</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Inisialisasi data
        let laporanData = JSON.parse(localStorage.getItem('laporanData')) || [];
        let nextId = laporanData.length > 0 ? Math.max(...laporanData.map(item => item.id)) + 1 : 1;
        let filteredData = [...laporanData];
        let proyekChart, punishmentChart;
        let deleteId = null;

        // Set tanggal hari ini
        document.getElementById('currentDate').textContent = new Date().toLocaleDateString('id-ID', { 
            weekday: 'long', 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
        });
        document.getElementById('todayDate').textContent = new Date().toLocaleDateString('id-ID', { 
            day: 'numeric', 
            month: 'short' 
        });
        document.getElementById('tanggal').valueAsDate = new Date();

        // Set default filter dates
        const today = new Date();
        const lastMonth = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());
        document.getElementById('filterStartDate').valueAsDate = lastMonth;
        document.getElementById('filterEndDate').valueAsDate = today;

        // Update dashboard statistics
        function updateDashboard() {
            // Total laporan
            document.getElementById('totalLaporan').textContent = laporanData.length;
            
            // Laporan hari ini
            const today = new Date().toISOString().split('T')[0];
            const todayReports = laporanData.filter(item => item.tanggal === today);
            document.getElementById('laporanHariIni').textContent = todayReports.length;
            
            // Total proyek
            const uniqueProyek = [...new Set(laporanData.map(item => item.proyek))];
            document.getElementById('totalProyek').textContent = uniqueProyek.length;
            
            // Total pelanggaran
            const totalPelanggaran = laporanData.filter(item => item.personil && item.personil.trim() !== '').length;
            document.getElementById('totalPelanggaran').textContent = totalPelanggaran;
            
            // Update proyek filter options
            updateProyekFilterOptions(uniqueProyek);
            
            // Update charts
            updateCharts();
            
            // Update recent reports table
            updateRecentReports();
        }

        // Update proyek filter options
        function updateProyekFilterOptions(proyekList) {
            const select = document.getElementById('filterProyek');
            const currentValue = select.value;
            
            // Clear existing options except "Semua Proyek"
            select.innerHTML = '<option value="">Semua Proyek</option>';
            
            // Add new options
            proyekList.forEach(proyek => {
                const option = document.createElement('option');
                option.value = proyek;
                option.textContent = proyek;
                select.appendChild(option);
            });
            
            // Restore selected value if it still exists
            if (currentValue && proyekList.includes(currentValue)) {
                select.value = currentValue;
            }
        }

        // Update charts
        function updateCharts() {
            // Prepare data for proyek chart
            const proyekCount = {};
            laporanData.forEach(item => {
                proyekCount[item.proyek] = (proyekCount[item.proyek] || 0) + 1;
            });
            
            // Prepare data for punishment chart
            const punishmentCount = {};
            laporanData.forEach(item => {
                if (item.punishment) {
                    punishmentCount[item.punishment] = (punishmentCount[item.punishment] || 0) + 1;
                }
            });
            
            // Update proyek chart
            const proyekCtx = document.getElementById('proyekChart').getContext('2d');
            if (proyekChart) {
                proyekChart.destroy();
            }
            proyekChart = new Chart(proyekCtx, {
                type: 'bar',
                data: {
                    labels: Object.keys(proyekCount),
                    datasets: [{
                        label: 'Jumlah Laporan',
                        data: Object.values(proyekCount),
                        backgroundColor: 'rgba(106, 17, 203, 0.7)',
                        borderColor: 'rgba(106, 17, 203, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1
                            }
                        }
                    }
                }
            });
            
            // Update punishment chart
            const punishmentCtx = document.getElementById('punishmentChart').getContext('2d');
            if (punishmentChart) {
                punishmentChart.destroy();
            }
            punishmentChart = new Chart(punishmentCtx, {
                type: 'pie',
                data: {
                    labels: Object.keys(punishmentCount),
                    datasets: [{
                        data: Object.values(punishmentCount),
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.7)',
                            'rgba(54, 162, 235, 0.7)',
                            'rgba(255, 206, 86, 0.7)',
                            'rgba(75, 192, 192, 0.7)',
                            'rgba(153, 102, 255, 0.7)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });
        }

        // Update recent reports table
        function updateRecentReports() {
            const tableBody = document.getElementById('recentTableBody');
            const emptyState = document.getElementById('recentEmptyState');
            
            // Get last 5 reports sorted by date
            const recentReports = [...laporanData]
                .sort((a, b) => new Date(b.tanggal) - new Date(a.tanggal))
                .slice(0, 5);
            
            if (recentReports.length === 0) {
                tableBody.innerHTML = '';
                emptyState.classList.remove('d-none');
                return;
            }
            
            emptyState.classList.add('d-none');
            tableBody.innerHTML = recentReports.map(item => `
                <tr>
                    <td>${item.id}</td>
                    <td>${formatDate(item.tanggal)}</td>
                    <td>${item.proyek}</td>
                    <td>${item.su}</td>
                    <td>${truncateText(item.kejadian, 30)}</td>
                    <td>${item.punishment || '-'}</td>
                </tr>
            `).join('');
        }

        // Apply filters
        function applyFilters() {
            const startDate = document.getElementById('filterStartDate').value;
            const endDate = document.getElementById('filterEndDate').value;
            const proyek = document.getElementById('filterProyek').value;
            
            filteredData = laporanData.filter(item => {
                let matchDate = true;
                let matchProyek = true;
                
                if (startDate && endDate) {
                    const itemDate = new Date(item.tanggal);
                    matchDate = itemDate >= new Date(startDate) && itemDate <= new Date(endDate);
                }
                
                if (proyek) {
                    matchProyek = item.proyek === proyek;
                }
                
                return matchDate && matchProyek;
            });
            
            // Update dashboard with filtered data
            updateFilteredDashboard();
        }

        // Update dashboard with filtered data
        function updateFilteredDashboard() {
            // Update statistics
            document.getElementById('totalLaporan').textContent = filteredData.length;
            
            // Update charts with filtered data
            const proyekCount = {};
            const punishmentCount = {};
            
            filteredData.forEach(item => {
                proyekCount[item.proyek] = (proyekCount[item.proyek] || 0) + 1;
                
                if (item.punishment) {
                    punishmentCount[item.punishment] = (punishmentCount[item.punishment] || 0) + 1;
                }
            });
            
            // Update proyek chart
            if (proyekChart) {
                proyekChart.data.labels = Object.keys(proyekCount);
                proyekChart.data.datasets[0].data = Object.values(proyekCount);
                proyekChart.update();
            }
            
            // Update punishment chart
            if (punishmentChart) {
                punishmentChart.data.labels = Object.keys(punishmentCount);
                punishmentChart.data.datasets[0].data = Object.values(punishmentCount);
                punishmentChart.update();
            }
            
            // Update recent reports
            updateRecentReports();
        }

        // Show all reports (switch to data tab)
        function showAllReports() {
            const dataTab = new bootstrap.Tab(document.getElementById('data-tab'));
            dataTab.show();
        }

        // Render tabel data laporan
        function renderTable(data = laporanData) {
            const tableBody = document.getElementById('laporanTableBody');
            const emptyState = document.getElementById('emptyState');
            
            if (data.length === 0) {
                tableBody.innerHTML = '';
                emptyState.classList.remove('d-none');
                return;
            }
            
            emptyState.classList.add('d-none');
            tableBody.innerHTML = data.map(item => `
                <tr>
                    <td>${item.id}</td>
                    <td>${formatDate(item.tanggal)}</td>
                    <td>${item.proyek}</td>
                    <td>${item.su}</td>
                    <td>${truncateText(item.kejadian, 30)}</td>
                    <td>${truncateText(item.tindakLanjut, 30)}</td>
                    <td>${item.personil || '-'}</td>
                    <td>${item.punishment || '-'}</td>
                    <td class="action-buttons">
                        <button class="btn btn-sm btn-outline-primary" onclick="viewDetail(${item.id})" title="Lihat Detail">
                            <i class="bi bi-eye"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-warning" onclick="editLaporan(${item.id})" title="Edit">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-danger" onclick="confirmDelete(${item.id})" title="Hapus">
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>
                </tr>
            `).join('');
        }

        // Format tanggal
        function formatDate(dateString) {
            const options = { day: 'numeric', month: 'short', year: 'numeric' };
            return new Date(dateString).toLocaleDateString('id-ID', options);
        }

        // Potong teks panjang
        function truncateText(text, maxLength) {
            return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;
        }

        // Tambah/update laporan
        document.getElementById('laporanForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const editId = document.getElementById('editId').value;
            
            if (editId) {
                // Update existing laporan
                const index = laporanData.findIndex(item => item.id == editId);
                if (index !== -1) {
                    laporanData[index] = {
                        id: parseInt(editId),
                        tanggal: document.getElementById('tanggal').value,
                        proyek: document.getElementById('proyek').value,
                        su: document.getElementById('su').value,
                        kejadian: document.getElementById('kejadian').value,
                        tindakLanjut: document.getElementById('tindakLanjut').value,
                        personil: document.getElementById('personil').value,
                        punishment: document.getElementById('punishment').value
                    };
                    showNotification('Laporan berhasil diperbarui!', 'warning');
                }
            } else {
                // Add new laporan
                const newLaporan = {
                    id: nextId++,
                    tanggal: document.getElementById('tanggal').value,
                    proyek: document.getElementById('proyek').value,
                    su: document.getElementById('su').value,
                    kejadian: document.getElementById('kejadian').value,
                    tindakLanjut: document.getElementById('tindakLanjut').value,
                    personil: document.getElementById('personil').value,
                    punishment: document.getElementById('punishment').value
                };
                
                laporanData.push(newLaporan);
                showNotification('Laporan berhasil disimpan!', 'success');
            }
            
            localStorage.setItem('laporanData', JSON.stringify(laporanData));
            
            // Reset form
            cancelEdit();
            
            // Update dashboard
            updateDashboard();
            
            // Render ulang tabel
            renderTable();
        });

        // Edit laporan
        function editLaporan(id) {
            const laporan = laporanData.find(item => item.id === id);
            if (laporan) {
                // Switch to input tab
                const inputTab = new bootstrap.Tab(document.getElementById('input-tab'));
                inputTab.show();
                
                // Fill form with data
                document.getElementById('editId').value = laporan.id;
                document.getElementById('tanggal').value = laporan.tanggal;
                document.getElementById('proyek').value = laporan.proyek;
                document.getElementById('su').value = laporan.su;
                document.getElementById('kejadian').value = laporan.kejadian;
                document.getElementById('tindakLanjut').value = laporan.tindakLanjut;
                document.getElementById('personil').value = laporan.personil || '';
                document.getElementById('punishment').value = laporan.punishment || '';
                
                // Update form UI
                document.getElementById('formTitle').innerHTML = '<i class="bi bi-pencil-square me-2"></i>Edit Laporan';
                document.getElementById('submitBtn').innerHTML = '<i class="bi bi-save me-1"></i> Update Laporan';
                document.getElementById('cancelBtn').style.display = 'block';
                document.getElementById('resetBtn').style.display = 'none';
            }
        }

        // Cancel edit
        function cancelEdit() {
            document.getElementById('laporanForm').reset();
            document.getElementById('editId').value = '';
            document.getElementById('tanggal').valueAsDate = new Date();
            
            // Reset form UI
            document.getElementById('formTitle').innerHTML = '<i class="bi bi-plus-circle me-2"></i>Tambah Laporan Baru';
            document.getElementById('submitBtn').innerHTML = '<i class="bi bi-save me-1"></i> Simpan Laporan';
            document.getElementById('cancelBtn').style.display = 'none';
            document.getElementById('resetBtn').style.display = 'block';
        }

        // Confirm delete
        function confirmDelete(id) {
            deleteId = id;
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }

        // Delete laporan
        document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
            if (deleteId) {
                laporanData = laporanData.filter(item => item.id !== deleteId);
                localStorage.setItem('laporanData', JSON.stringify(laporanData));
                
                // Update nextId if needed
                if (laporanData.length > 0) {
                    nextId = Math.max(...laporanData.map(item => item.id)) + 1;
                } else {
                    nextId = 1;
                }
                
                // Close modal
                const deleteModal = bootstrap.Modal.getInstance(document.getElementById('deleteModal'));
                deleteModal.hide();
                
                // Update dashboard
                updateDashboard();
                
                // Render ulang tabel
                renderTable();
                
                showNotification('Laporan berhasil dihapus!', 'danger');
                
                deleteId = null;
            }
        });

        // Lihat detail
        function viewDetail(id) {
            const laporan = laporanData.find(item => item.id === id);
            if (laporan) {
                alert(`Detail Laporan ID: ${laporan.id}\n\n` +
                      `Tanggal: ${formatDate(laporan.tanggal)}\n` +
                      `Proyek: ${laporan.proyek}\n` +
                      `SU: ${laporan.su}\n` +
                      `Kejadian Menonjol: ${laporan.kejadian}\n` +
                      `Tindak Lanjut: ${laporan.tindakLanjut}\n` +
                      `Personil: ${laporan.personil || '-'}\n` +
                      `Punishment: ${laporan.punishment || '-'}`);
            }
        }

        // Export ke Excel
        document.getElementById('exportBtn').addEventListener('click', function() {
            if (laporanData.length === 0) {
                showNotification('Tidak ada data untuk diekspor!', 'warning');
                return;
            }
            
            // Siapkan data untuk export
            const exportData = laporanData.map(item => ({
                ID: item.id,
                'Hari/Tanggal': formatDate(item.tanggal),
                'Nama Proyek': item.proyek,
                'Nama SU': item.su,
                'Kejadian Menonjol (PI)': item.kejadian,
                'Tindak Lanjut (CA)': item.tindakLanjut,
                'Personil Yang Melanggar': item.personil || '-',
                'Punishment (SP)': item.punishment || '-'
            }));
            
            // Buat workbook
            const wb = XLSX.utils.book_new();
            const ws = XLSX.utils.json_to_sheet(exportData);
            
            // Tambahkan worksheet ke workbook
            XLSX.utils.book_append_sheet(wb, ws, "Laporan Harian");
            
            // Generate file Excel
            const date = new Date().toISOString().slice(0, 10);
            XLSX.writeFile(wb, `Laporan_Harian_${date}.xlsx`);
            
            showNotification('Data berhasil diekspor ke Excel!', 'success');
        });

        // Pencarian
        document.getElementById('searchInput').addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            const filteredData = laporanData.filter(item => 
                item.proyek.toLowerCase().includes(searchTerm) ||
                item.su.toLowerCase().includes(searchTerm) ||
                item.kejadian.toLowerCase().includes(searchTerm) ||
                item.tindakLanjut.toLowerCase().includes(searchTerm) ||
                (item.personil && item.personil.toLowerCase().includes(searchTerm)) ||
                (item.punishment && item.punishment.toLowerCase().includes(searchTerm))
            );
            renderTable(filteredData);
        });

        // Notifikasi
        function showNotification(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
            alertDiv.style.top = '20px';
            alertDiv.style.right = '20px';
            alertDiv.style.zIndex = '9999';
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;
            document.body.appendChild(alertDiv);
            
            // Auto remove after 3 seconds
            setTimeout(() => {
                alertDiv.remove();
            }, 3000);
        }

        // Inisialisasi
        updateDashboard();
        renderTable();
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
